; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

	TITLE	E:\github.com\andlabs\barspy\call\writeimglist6\call.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ThreadProc@@YGKPAX@Z				; ThreadProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stream$ = -8						; size = 4
_a$ = -4						; size = 4
_lpParameter$ = 8					; size = 4
?ThreadProc@@YGKPAX@Z PROC				; ThreadProc
; File e:\github.com\andlabs\barspy\call\writeimglist6\call.cpp
; Line 32
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 33
  00006	8b 45 08	 mov	 eax, DWORD PTR _lpParameter$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
; Line 34
  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _stream$[ebp], 0
; Line 37
  00013	8d 4d f8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00016	51		 push	 ecx
  00017	6a 00		 push	 0
  00019	6a 00		 push	 0
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	ff d0		 call	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00025	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; Line 38
  00028	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0002b	83 7a 14 00	 cmp	 DWORD PTR [edx+20], 0
  0002f	74 04		 je	 SHORT $LN5@ThreadProc
; Line 39
  00031	eb 43		 jmp	 SHORT $out$8
  00033	eb 41		 jmp	 SHORT $out$8
$LN5@ThreadProc:
; Line 40
  00035	8b 45 f8	 mov	 eax, DWORD PTR _stream$[ebp]
  00038	50		 push	 eax
  00039	6a 00		 push	 0
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0003e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00041	52		 push	 edx
  00042	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00045	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00048	ff d1		 call	 ecx
  0004a	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0004d	89 42 14	 mov	 DWORD PTR [edx+20], eax
; Line 41
  00050	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00053	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00057	74 04		 je	 SHORT $LN3@ThreadProc
; Line 42
  00059	eb 1b		 jmp	 SHORT $out$8
  0005b	eb 19		 jmp	 SHORT $out$8
$LN3@ThreadProc:
; Line 43
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00060	83 c1 10	 add	 ecx, 16			; 00000010H
  00063	51		 push	 ecx
  00064	8b 55 f8	 mov	 edx, DWORD PTR _stream$[ebp]
  00067	52		 push	 edx
  00068	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0006b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006e	ff d1		 call	 ecx
  00070	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  00073	89 42 14	 mov	 DWORD PTR [edx+20], eax
$out$8:
; Line 46
  00076	83 7d f8 00	 cmp	 DWORD PTR _stream$[ebp], 0
  0007a	74 0e		 je	 SHORT $LN1@ThreadProc
; Line 47
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _stream$[ebp]
  0007f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00081	8b 55 f8	 mov	 edx, DWORD PTR _stream$[ebp]
  00084	52		 push	 edx
  00085	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00088	ff d0		 call	 eax
$LN1@ThreadProc:
; Line 48
  0008a	33 c0		 xor	 eax, eax
; Line 49
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
?ThreadProc@@YGKPAX@Z ENDP				; ThreadProc
_TEXT	ENDS
END
