; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

	TITLE	E:\github.com\andlabs\barspy\call\dumphglobal\call.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ThreadProc@@YGKPAX@Z				; ThreadProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
_gmem$ = -20						; size = 4
_bsrc$ = -16						; size = 4
_bdest$ = -12						; size = 4
_i$ = -8						; size = 4
_a$ = -4						; size = 4
_lpParameter$ = 8					; size = 4
?ThreadProc@@YGKPAX@Z PROC				; ThreadProc
; File e:\github.com\andlabs\barspy\call\dumphglobal\call.cpp
; Line 38
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
; Line 39
  00006	8b 45 08	 mov	 eax, DWORD PTR _lpParameter$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
; Line 45
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0000f	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00012	52		 push	 edx
  00013	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff d1		 call	 ecx
  0001a	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0001d	89 42 20	 mov	 DWORD PTR [edx+32], eax
; Line 46
  00020	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00023	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00027	75 0a		 jne	 SHORT $LN13@ThreadProc
; Line 47
  00029	e9 ff 00 00 00	 jmp	 $fail$16
  0002e	e9 fa 00 00 00	 jmp	 $fail$16
$LN13@ThreadProc:
; Line 48
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00036	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	ff d1		 call	 ecx
  00042	89 45 ec	 mov	 DWORD PTR _gmem$[ebp], eax
; Line 49
  00045	83 7d ec 00	 cmp	 DWORD PTR _gmem$[ebp], 0
  00049	75 0a		 jne	 SHORT $LN11@ThreadProc
; Line 50
  0004b	e9 dd 00 00 00	 jmp	 $fail$16
  00050	e9 d8 00 00 00	 jmp	 $fail$16
$LN11@ThreadProc:
; Line 53
  00055	6a 04		 push	 4
  00057	68 00 10 00 00	 push	 4096			; 00001000H
  0005c	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0005f	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00062	50		 push	 eax
  00063	6a 00		 push	 0
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00068	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0006b	ff d2		 call	 edx
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00070	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; Line 54
  00073	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  00076	83 7a 1c 00	 cmp	 DWORD PTR [edx+28], 0
  0007a	75 0a		 jne	 SHORT $LN9@ThreadProc
; Line 55
  0007c	e9 ac 00 00 00	 jmp	 $fail$16
  00081	e9 a7 00 00 00	 jmp	 $fail$16
$LN9@ThreadProc:
; Line 59
  00086	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00089	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0008c	89 4d f4	 mov	 DWORD PTR _bdest$[ebp], ecx
; Line 60
  0008f	8b 55 ec	 mov	 edx, DWORD PTR _gmem$[ebp]
  00092	89 55 f0	 mov	 DWORD PTR _bsrc$[ebp], edx
; Line 61
  00095	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0009c	eb 09		 jmp	 SHORT $LN7@ThreadProc
$LN6@ThreadProc:
  0009e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  000a1	83 c0 01	 add	 eax, 1
  000a4	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN7@ThreadProc:
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  000aa	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  000ad	3b 51 20	 cmp	 edx, DWORD PTR [ecx+32]
  000b0	73 1e		 jae	 SHORT $LN5@ThreadProc
; Line 62
  000b2	8b 45 f4	 mov	 eax, DWORD PTR _bdest$[ebp]
  000b5	8b 4d f0	 mov	 ecx, DWORD PTR _bsrc$[ebp]
  000b8	8a 11		 mov	 dl, BYTE PTR [ecx]
  000ba	88 10		 mov	 BYTE PTR [eax], dl
  000bc	8b 45 f4	 mov	 eax, DWORD PTR _bdest$[ebp]
  000bf	83 c0 01	 add	 eax, 1
  000c2	89 45 f4	 mov	 DWORD PTR _bdest$[ebp], eax
  000c5	8b 4d f0	 mov	 ecx, DWORD PTR _bsrc$[ebp]
  000c8	83 c1 01	 add	 ecx, 1
  000cb	89 4d f0	 mov	 DWORD PTR _bsrc$[ebp], ecx
  000ce	eb ce		 jmp	 SHORT $LN6@ThreadProc
$LN5@ThreadProc:
; Line 64
  000d0	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  000d3	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000d6	50		 push	 eax
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  000da	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000dd	ff d2		 call	 edx
  000df	85 c0		 test	 eax, eax
  000e1	75 25		 jne	 SHORT $LN4@ThreadProc
; Line 65
  000e3	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  000e6	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000e9	ff d1		 call	 ecx
  000eb	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  000ee	89 42 28	 mov	 DWORD PTR [edx+40], eax
; Line 66
  000f1	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  000f4	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  000f8	75 0e		 jne	 SHORT $LN4@ThreadProc
; Line 67
  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  000fd	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
; Line 68
  00104	33 c0		 xor	 eax, eax
  00106	eb 3f		 jmp	 SHORT $LN14@ThreadProc
$LN4@ThreadProc:
; Line 71
  00108	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0010b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0010e	50		 push	 eax
  0010f	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00112	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00115	ff d2		 call	 edx
  00117	85 c0		 test	 eax, eax
  00119	74 04		 je	 SHORT $LN2@ThreadProc
; Line 72
  0011b	eb 10		 jmp	 SHORT $fail$16
  0011d	eb 0e		 jmp	 SHORT $fail$16
$LN2@ThreadProc:
; Line 74
  0011f	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00122	c7 40 24 01 00
	00 00		 mov	 DWORD PTR [eax+36], 1
; Line 75
  00129	33 c0		 xor	 eax, eax
  0012b	eb 1a		 jmp	 SHORT $LN14@ThreadProc
$fail$16:
; Line 78
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00130	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00133	ff d2		 call	 edx
  00135	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00138	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 79
  0013b	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0013e	c7 42 24 00 00
	00 00		 mov	 DWORD PTR [edx+36], 0
; Line 80
  00145	33 c0		 xor	 eax, eax
$LN14@ThreadProc:
; Line 81
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 04 00	 ret	 4
?ThreadProc@@YGKPAX@Z ENDP				; ThreadProc
_TEXT	ENDS
END
