; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

	TITLE	E:\github.com\andlabs\barspy\call\toolbargeneral\call.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ThreadProc@@YGKPAX@Z				; ThreadProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
_metrics$ = -60						; size = 32
_scheme$ = -28						; size = 12
_size$ = -16						; size = 8
_lResult$ = -8						; size = 4
_a$ = -4						; size = 4
_lpParameter$ = 8					; size = 4
?ThreadProc@@YGKPAX@Z PROC				; ThreadProc
; File e:\github.com\andlabs\barspy\call\toolbargeneral\call.cpp
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
; Line 50
  00006	8b 45 08	 mov	 eax, DWORD PTR _lpParameter$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
; Line 56
  0000c	33 c9		 xor	 ecx, ecx
  0000e	89 4d e4	 mov	 DWORD PTR _scheme$[ebp], ecx
  00011	89 4d e8	 mov	 DWORD PTR _scheme$[ebp+4], ecx
  00014	89 4d ec	 mov	 DWORD PTR _scheme$[ebp+8], ecx
; Line 57
  00017	c7 45 e4 0c 00
	00 00		 mov	 DWORD PTR _scheme$[ebp], 12 ; 0000000cH
; Line 58
  0001e	8d 55 e4	 lea	 edx, DWORD PTR _scheme$[ebp]
  00021	52		 push	 edx
  00022	6a 00		 push	 0
  00024	68 03 20 00 00	 push	 8195			; 00002003H
  00029	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0002c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002f	51		 push	 ecx
  00030	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  00033	8b 02		 mov	 eax, DWORD PTR [edx]
  00035	ff d0		 call	 eax
  00037	89 45 f8	 mov	 DWORD PTR _lResult$[ebp], eax
; Line 59
  0003a	83 7d f8 00	 cmp	 DWORD PTR _lResult$[ebp], 0
  0003e	74 1e		 je	 SHORT $LN4@ThreadProc
; Line 60
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00043	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
; Line 61
  0004a	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0004d	8b 45 e8	 mov	 eax, DWORD PTR _scheme$[ebp+4]
  00050	89 42 0c	 mov	 DWORD PTR [edx+12], eax
; Line 62
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00056	8b 55 ec	 mov	 edx, DWORD PTR _scheme$[ebp+8]
  00059	89 51 10	 mov	 DWORD PTR [ecx+16], edx
; Line 63
  0005c	eb 0a		 jmp	 SHORT $LN3@ThreadProc
$LN4@ThreadProc:
; Line 64
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00061	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
$LN3@ThreadProc:
; Line 66
  00068	8d 4d f0	 lea	 ecx, DWORD PTR _size$[ebp]
  0006b	51		 push	 ecx
  0006c	6a 00		 push	 0
  0006e	68 53 04 00 00	 push	 1107			; 00000453H
  00073	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  00076	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0007d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007f	ff d2		 call	 edx
  00081	89 45 f8	 mov	 DWORD PTR _lResult$[ebp], eax
; Line 67
  00084	83 7d f8 00	 cmp	 DWORD PTR _lResult$[ebp], 0
  00088	74 1e		 je	 SHORT $LN2@ThreadProc
; Line 68
  0008a	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0008d	c7 40 14 01 00
	00 00		 mov	 DWORD PTR [eax+20], 1
; Line 69
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00097	8b 55 f0	 mov	 edx, DWORD PTR _size$[ebp]
  0009a	89 51 18	 mov	 DWORD PTR [ecx+24], edx
; Line 70
  0009d	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  000a0	8b 4d f4	 mov	 ecx, DWORD PTR _size$[ebp+4]
  000a3	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
; Line 71
  000a6	eb 0a		 jmp	 SHORT $LN1@ThreadProc
$LN2@ThreadProc:
; Line 72
  000a8	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  000ab	c7 42 14 00 00
	00 00		 mov	 DWORD PTR [edx+20], 0
$LN1@ThreadProc:
; Line 74
  000b2	33 c0		 xor	 eax, eax
  000b4	89 45 c4	 mov	 DWORD PTR _metrics$[ebp], eax
  000b7	89 45 c8	 mov	 DWORD PTR _metrics$[ebp+4], eax
  000ba	89 45 cc	 mov	 DWORD PTR _metrics$[ebp+8], eax
  000bd	89 45 d0	 mov	 DWORD PTR _metrics$[ebp+12], eax
  000c0	89 45 d4	 mov	 DWORD PTR _metrics$[ebp+16], eax
  000c3	89 45 d8	 mov	 DWORD PTR _metrics$[ebp+20], eax
  000c6	89 45 dc	 mov	 DWORD PTR _metrics$[ebp+24], eax
  000c9	89 45 e0	 mov	 DWORD PTR _metrics$[ebp+28], eax
; Line 75
  000cc	c7 45 c4 20 00
	00 00		 mov	 DWORD PTR _metrics$[ebp], 32 ; 00000020H
; Line 76
  000d3	c7 45 c8 07 00
	00 00		 mov	 DWORD PTR _metrics$[ebp+4], 7
; Line 77
  000da	8d 4d c4	 lea	 ecx, DWORD PTR _metrics$[ebp]
  000dd	51		 push	 ecx
  000de	6a 00		 push	 0
  000e0	68 65 04 00 00	 push	 1125			; 00000465H
  000e5	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  000e8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000eb	50		 push	 eax
  000ec	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  000ef	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f1	ff d2		 call	 edx
; Line 78
  000f3	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  000f6	8b 4d cc	 mov	 ecx, DWORD PTR _metrics$[ebp+8]
  000f9	89 48 20	 mov	 DWORD PTR [eax+32], ecx
; Line 79
  000fc	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  000ff	8b 45 d0	 mov	 eax, DWORD PTR _metrics$[ebp+12]
  00102	89 42 24	 mov	 DWORD PTR [edx+36], eax
; Line 80
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00108	8b 55 d4	 mov	 edx, DWORD PTR _metrics$[ebp+16]
  0010b	89 51 28	 mov	 DWORD PTR [ecx+40], edx
; Line 81
  0010e	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00111	8b 4d d8	 mov	 ecx, DWORD PTR _metrics$[ebp+20]
  00114	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
; Line 82
  00117	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0011a	8b 45 dc	 mov	 eax, DWORD PTR _metrics$[ebp+24]
  0011d	89 42 30	 mov	 DWORD PTR [edx+48], eax
; Line 83
  00120	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00123	8b 55 e0	 mov	 edx, DWORD PTR _metrics$[ebp+28]
  00126	89 51 34	 mov	 DWORD PTR [ecx+52], edx
; Line 85
  00129	33 c0		 xor	 eax, eax
; Line 86
  0012b	8b e5		 mov	 esp, ebp
  0012d	5d		 pop	 ebp
  0012e	c2 04 00	 ret	 4
?ThreadProc@@YGKPAX@Z ENDP				; ThreadProc
_TEXT	ENDS
END
