; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ThreadProc@@YAKPEAX@Z				; ThreadProc
pdata	SEGMENT
$pdata$?ThreadProc@@YAKPEAX@Z DD imagerel $LN7
	DD	imagerel $LN7+374
	DD	imagerel $unwind$?ThreadProc@@YAKPEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?ThreadProc@@YAKPEAX@Z DD 020a01H
	DD	07006d20aH
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
a$ = 32
lResult$ = 40
size$ = 48
scheme$ = 56
metrics$ = 72
lpParameter$ = 128
?ThreadProc@@YAKPEAX@Z PROC				; ThreadProc
; File e:\github.com\andlabs\barspy\call\toolbargeneral\call.cpp
; Line 49
$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
; Line 50
  0000a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR lpParameter$[rsp]
  00012	48 89 44 24 20	 mov	 QWORD PTR a$[rsp], rax
; Line 56
  00017	48 8d 44 24 38	 lea	 rax, QWORD PTR scheme$[rsp]
  0001c	48 8b f8	 mov	 rdi, rax
  0001f	33 c0		 xor	 eax, eax
  00021	b9 0c 00 00 00	 mov	 ecx, 12
  00026	f3 aa		 rep stosb
; Line 57
  00028	c7 44 24 38 0c
	00 00 00	 mov	 DWORD PTR scheme$[rsp], 12
; Line 58
  00030	4c 8d 4c 24 38	 lea	 r9, QWORD PTR scheme$[rsp]
  00035	45 33 c0	 xor	 r8d, r8d
  00038	ba 03 20 00 00	 mov	 edx, 8195		; 00002003H
  0003d	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0004b	ff 10		 call	 QWORD PTR [rax]
  0004d	48 89 44 24 28	 mov	 QWORD PTR lResult$[rsp], rax
; Line 59
  00052	48 83 7c 24 28
	00		 cmp	 QWORD PTR lResult$[rsp], 0
  00058	74 26		 je	 SHORT $LN4@ThreadProc
; Line 60
  0005a	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0005f	c7 40 10 01 00
	00 00		 mov	 DWORD PTR [rax+16], 1
; Line 61
  00066	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0006b	8b 4c 24 3c	 mov	 ecx, DWORD PTR scheme$[rsp+4]
  0006f	89 48 14	 mov	 DWORD PTR [rax+20], ecx
; Line 62
  00072	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  00077	8b 4c 24 40	 mov	 ecx, DWORD PTR scheme$[rsp+8]
  0007b	89 48 18	 mov	 DWORD PTR [rax+24], ecx
; Line 63
  0007e	eb 0c		 jmp	 SHORT $LN3@ThreadProc
$LN4@ThreadProc:
; Line 64
  00080	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  00085	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0
$LN3@ThreadProc:
; Line 66
  0008c	4c 8d 4c 24 30	 lea	 r9, QWORD PTR size$[rsp]
  00091	45 33 c0	 xor	 r8d, r8d
  00094	ba 53 04 00 00	 mov	 edx, 1107		; 00000453H
  00099	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0009e	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  000a2	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  000a7	ff 10		 call	 QWORD PTR [rax]
  000a9	48 89 44 24 28	 mov	 QWORD PTR lResult$[rsp], rax
; Line 67
  000ae	48 83 7c 24 28
	00		 cmp	 QWORD PTR lResult$[rsp], 0
  000b4	74 26		 je	 SHORT $LN2@ThreadProc
; Line 68
  000b6	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  000bb	c7 40 1c 01 00
	00 00		 mov	 DWORD PTR [rax+28], 1
; Line 69
  000c2	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  000c7	8b 4c 24 30	 mov	 ecx, DWORD PTR size$[rsp]
  000cb	89 48 20	 mov	 DWORD PTR [rax+32], ecx
; Line 70
  000ce	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  000d3	8b 4c 24 34	 mov	 ecx, DWORD PTR size$[rsp+4]
  000d7	89 48 24	 mov	 DWORD PTR [rax+36], ecx
; Line 71
  000da	eb 0c		 jmp	 SHORT $LN1@ThreadProc
$LN2@ThreadProc:
; Line 72
  000dc	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  000e1	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [rax+28], 0
$LN1@ThreadProc:
; Line 74
  000e8	48 8d 44 24 48	 lea	 rax, QWORD PTR metrics$[rsp]
  000ed	48 8b f8	 mov	 rdi, rax
  000f0	33 c0		 xor	 eax, eax
  000f2	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000f7	f3 aa		 rep stosb
; Line 75
  000f9	c7 44 24 48 20
	00 00 00	 mov	 DWORD PTR metrics$[rsp], 32 ; 00000020H
; Line 76
  00101	c7 44 24 4c 07
	00 00 00	 mov	 DWORD PTR metrics$[rsp+4], 7
; Line 77
  00109	4c 8d 4c 24 48	 lea	 r9, QWORD PTR metrics$[rsp]
  0010e	45 33 c0	 xor	 r8d, r8d
  00111	ba 65 04 00 00	 mov	 edx, 1125		; 00000465H
  00116	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0011b	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0011f	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  00124	ff 10		 call	 QWORD PTR [rax]
; Line 78
  00126	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0012b	8b 4c 24 50	 mov	 ecx, DWORD PTR metrics$[rsp+8]
  0012f	89 48 28	 mov	 DWORD PTR [rax+40], ecx
; Line 79
  00132	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  00137	8b 4c 24 54	 mov	 ecx, DWORD PTR metrics$[rsp+12]
  0013b	89 48 2c	 mov	 DWORD PTR [rax+44], ecx
; Line 80
  0013e	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  00143	8b 4c 24 58	 mov	 ecx, DWORD PTR metrics$[rsp+16]
  00147	89 48 30	 mov	 DWORD PTR [rax+48], ecx
; Line 81
  0014a	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0014f	8b 4c 24 5c	 mov	 ecx, DWORD PTR metrics$[rsp+20]
  00153	89 48 34	 mov	 DWORD PTR [rax+52], ecx
; Line 82
  00156	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  0015b	8b 4c 24 60	 mov	 ecx, DWORD PTR metrics$[rsp+24]
  0015f	89 48 38	 mov	 DWORD PTR [rax+56], ecx
; Line 83
  00162	48 8b 44 24 20	 mov	 rax, QWORD PTR a$[rsp]
  00167	8b 4c 24 64	 mov	 ecx, DWORD PTR metrics$[rsp+28]
  0016b	89 48 3c	 mov	 DWORD PTR [rax+60], ecx
; Line 85
  0016e	33 c0		 xor	 eax, eax
; Line 86
  00170	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00174	5f		 pop	 rdi
  00175	c3		 ret	 0
?ThreadProc@@YAKPEAX@Z ENDP				; ThreadProc
_TEXT	ENDS
END
