; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

	TITLE	E:\github.com\andlabs\barspy\call\writeimglist5\call.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ThreadProc@@YGKPAX@Z				; ThreadProc
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv85 = -16						; size = 4
_lastError$ = -12					; size = 4
_stream$ = -8						; size = 4
_a$ = -4						; size = 4
_lpParameter$ = 8					; size = 4
?ThreadProc@@YGKPAX@Z PROC				; ThreadProc
; File e:\github.com\andlabs\barspy\call\writeimglist5\call.cpp
; Line 33
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
; Line 34
  00006	8b 45 08	 mov	 eax, DWORD PTR _lpParameter$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
; Line 35
  0000c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _stream$[ebp], 0
; Line 38
  00013	8d 4d f8	 lea	 ecx, DWORD PTR _stream$[ebp]
  00016	51		 push	 ecx
  00017	6a 00		 push	 0
  00019	6a 00		 push	 0
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	ff d0		 call	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00025	89 41 18	 mov	 DWORD PTR [ecx+24], eax
; Line 39
  00028	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0002b	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  0002f	74 0a		 je	 SHORT $LN6@ThreadProc
; Line 40
  00031	e9 86 00 00 00	 jmp	 $out$11
  00036	e9 81 00 00 00	 jmp	 $out$11
$LN6@ThreadProc:
; Line 41
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _stream$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00042	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00045	52		 push	 edx
  00046	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00049	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004c	ff d1		 call	 ecx
  0004e	85 c0		 test	 eax, eax
  00050	75 51		 jne	 SHORT $LN4@ThreadProc
; Line 42
  00052	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  00055	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00058	ff d0		 call	 eax
  0005a	89 45 f4	 mov	 DWORD PTR _lastError$[ebp], eax
; Line 44
  0005d	83 7d f4 00	 cmp	 DWORD PTR _lastError$[ebp], 0
  00061	7f 08		 jg	 SHORT $LN9@ThreadProc
  00063	8b 4d f4	 mov	 ecx, DWORD PTR _lastError$[ebp]
  00066	89 4d f0	 mov	 DWORD PTR tv85[ebp], ecx
  00069	eb 18		 jmp	 SHORT $LN10@ThreadProc
$LN9@ThreadProc:
  0006b	8b 55 f4	 mov	 edx, DWORD PTR _lastError$[ebp]
  0006e	81 e2 ff ff 00
	00		 and	 edx, 65535		; 0000ffffH
  00074	81 ca 00 00 07
	00		 or	 edx, 458752		; 00070000H
  0007a	81 ca 00 00 00
	80		 or	 edx, -2147483648	; 80000000H
  00080	89 55 f0	 mov	 DWORD PTR tv85[ebp], edx
$LN10@ThreadProc:
  00083	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00086	8b 4d f0	 mov	 ecx, DWORD PTR tv85[ebp]
  00089	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 45
  0008c	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  0008f	83 7a 18 00	 cmp	 DWORD PTR [edx+24], 0
  00093	75 0a		 jne	 SHORT $LN3@ThreadProc
; Line 46
  00095	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00098	c7 40 18 05 40
	00 80		 mov	 DWORD PTR [eax+24], -2147467259 ; 80004005H
$LN3@ThreadProc:
; Line 47
  0009f	eb 1b		 jmp	 SHORT $out$11
  000a1	eb 19		 jmp	 SHORT $out$11
$LN4@ThreadProc:
; Line 49
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  000a6	83 c1 14	 add	 ecx, 20			; 00000014H
  000a9	51		 push	 ecx
  000aa	8b 55 f8	 mov	 edx, DWORD PTR _stream$[ebp]
  000ad	52		 push	 edx
  000ae	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  000b1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b4	ff d1		 call	 ecx
  000b6	8b 55 fc	 mov	 edx, DWORD PTR _a$[ebp]
  000b9	89 42 18	 mov	 DWORD PTR [edx+24], eax
$out$11:
; Line 52
  000bc	83 7d f8 00	 cmp	 DWORD PTR _stream$[ebp], 0
  000c0	74 0e		 je	 SHORT $LN1@ThreadProc
; Line 53
  000c2	8b 45 f8	 mov	 eax, DWORD PTR _stream$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	8b 55 f8	 mov	 edx, DWORD PTR _stream$[ebp]
  000ca	52		 push	 edx
  000cb	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ce	ff d0		 call	 eax
$LN1@ThreadProc:
; Line 54
  000d0	33 c0		 xor	 eax, eax
; Line 55
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
?ThreadProc@@YGKPAX@Z ENDP				; ThreadProc
_TEXT	ENDS
END
