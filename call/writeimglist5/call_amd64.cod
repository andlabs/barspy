; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30723.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ThreadProc@@YAKPEAX@Z				; ThreadProc
pdata	SEGMENT
$pdata$?ThreadProc@@YAKPEAX@Z DD imagerel $LN11
	DD	imagerel $LN11+253
	DD	imagerel $unwind$?ThreadProc@@YAKPEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?ThreadProc@@YAKPEAX@Z DD 010901H
	DD	08209H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
lastError$ = 32
tv85 = 36
a$ = 40
stream$ = 48
lpParameter$ = 80
?ThreadProc@@YAKPEAX@Z PROC				; ThreadProc
; File e:\github.com\andlabs\barspy\call\writeimglist5\call.cpp
; Line 33
$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
; Line 34
  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR lpParameter$[rsp]
  0000e	48 89 44 24 28	 mov	 QWORD PTR a$[rsp], rax
; Line 35
  00013	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR stream$[rsp], 0
; Line 38
  0001c	4c 8d 44 24 30	 lea	 r8, QWORD PTR stream$[rsp]
  00021	33 d2		 xor	 edx, edx
  00023	33 c9		 xor	 ecx, ecx
  00025	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  0002a	ff 10		 call	 QWORD PTR [rax]
  0002c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR a$[rsp]
  00031	89 41 30	 mov	 DWORD PTR [rcx+48], eax
; Line 39
  00034	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  00039	83 78 30 00	 cmp	 DWORD PTR [rax+48], 0
  0003d	74 0a		 je	 SHORT $LN6@ThreadProc
; Line 40
  0003f	e9 9a 00 00 00	 jmp	 $LN5@ThreadProc
  00044	e9 95 00 00 00	 jmp	 $out$12
$LN6@ThreadProc:
; Line 41
  00049	48 8b 54 24 30	 mov	 rdx, QWORD PTR stream$[rsp]
  0004e	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  00053	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  0005c	ff 50 10	 call	 QWORD PTR [rax+16]
  0005f	85 c0		 test	 eax, eax
  00061	75 5a		 jne	 SHORT $LN4@ThreadProc
; Line 42
  00063	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  00068	ff 50 18	 call	 QWORD PTR [rax+24]
  0006b	89 44 24 20	 mov	 DWORD PTR lastError$[rsp], eax
; Line 44
  0006f	83 7c 24 20 00	 cmp	 DWORD PTR lastError$[rsp], 0
  00074	7f 0a		 jg	 SHORT $LN9@ThreadProc
  00076	8b 44 24 20	 mov	 eax, DWORD PTR lastError$[rsp]
  0007a	89 44 24 24	 mov	 DWORD PTR tv85[rsp], eax
  0007e	eb 16		 jmp	 SHORT $LN10@ThreadProc
$LN9@ThreadProc:
  00080	8b 44 24 20	 mov	 eax, DWORD PTR lastError$[rsp]
  00084	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00089	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  0008e	0f ba e8 1f	 bts	 eax, 31
  00092	89 44 24 24	 mov	 DWORD PTR tv85[rsp], eax
$LN10@ThreadProc:
  00096	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  0009b	8b 4c 24 24	 mov	 ecx, DWORD PTR tv85[rsp]
  0009f	89 48 30	 mov	 DWORD PTR [rax+48], ecx
; Line 45
  000a2	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  000a7	83 78 30 00	 cmp	 DWORD PTR [rax+48], 0
  000ab	75 0c		 jne	 SHORT $LN3@ThreadProc
; Line 46
  000ad	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  000b2	c7 40 30 05 40
	00 80		 mov	 DWORD PTR [rax+48], -2147467259 ; ffffffff80004005H
$LN3@ThreadProc:
; Line 47
  000b9	eb 23		 jmp	 SHORT $LN2@ThreadProc
  000bb	eb 21		 jmp	 SHORT $out$12
$LN4@ThreadProc:
; Line 49
  000bd	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  000c2	48 83 c0 28	 add	 rax, 40			; 00000028H
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR stream$[rsp]
  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR a$[rsp]
  000d3	ff 50 08	 call	 QWORD PTR [rax+8]
  000d6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR a$[rsp]
  000db	89 41 30	 mov	 DWORD PTR [rcx+48], eax
$LN2@ThreadProc:
$LN5@ThreadProc:
$out$12:
; Line 52
  000de	48 83 7c 24 30
	00		 cmp	 QWORD PTR stream$[rsp], 0
  000e4	74 10		 je	 SHORT $LN1@ThreadProc
; Line 53
  000e6	48 8b 44 24 30	 mov	 rax, QWORD PTR stream$[rsp]
  000eb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ee	48 8b 4c 24 30	 mov	 rcx, QWORD PTR stream$[rsp]
  000f3	ff 50 10	 call	 QWORD PTR [rax+16]
$LN1@ThreadProc:
; Line 54
  000f6	33 c0		 xor	 eax, eax
; Line 55
  000f8	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000fc	c3		 ret	 0
?ThreadProc@@YAKPEAX@Z ENDP				; ThreadProc
_TEXT	ENDS
END
